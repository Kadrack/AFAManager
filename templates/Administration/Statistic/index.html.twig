{% extends 'base.html.twig' %}

{% block title %}
    AFA-Manager
{% endblock %}

{% block stylesheets %}
{% endblock %}

{% block body %}
    <h1>Statistique en temps réel</h1>
    <table class="table table-sm table-hover">
        <thead class="text-center">
            <tr>
                <th class="align-middle" rowspan="2" scope="col">Province</th>
                <th colspan="2" scope="col">- de 6</th>
                <th colspan="2" scope="col">- de 12</th>
                <th colspan="2" scope="col">- de 18</th>
                <th colspan="2" scope="col">- de 25</th>
                <th colspan="2" scope="col">- de 35</th>
                <th colspan="2" scope="col">+ de 35</th>
                <th colspan="2" scope="col">Total</th>
                <th class="align-middle" rowspan="2" scope="col">Total</th>
                <th class="align-middle" rowspan="2" scope="col"></th>
            </tr>
            <tr>
                <th scope="col">H</th>
                <th scope="col">F</th>
                <th scope="col">H</th>
                <th scope="col">F</th>
                <th scope="col">H</th>
                <th scope="col">F</th>
                <th scope="col">H</th>
                <th scope="col">F</th>
                <th scope="col">H</th>
                <th scope="col">F</th>
                <th scope="col">H</th>
                <th scope="col">F</th>
                <th scope="col">H</th>
                <th scope="col">F</th>
            </tr>
        </thead>
        <tbody class="text-center">
            {% for province in statistics %}
            <tr>
                <td class="align-middle text-left">{{ listData.province(province.Id) }}</td>
                {% for value in province.Limits %}
                <td class="align-middle">{{ value.Total }}</td>
                {% else %}
                <td class="align-middle">0</td>
                {% endfor %}
                <td class="align-middle">{{ province.Total.1 }}</td>
                <td class="align-middle">{{ province.Total.2 }}</td>
                <td class="align-middle">{{ province.Total.1 + province.Total.2 }}</td>
                <td class="align-middle"><a class="btn btn-primary" href="{{ path('administration_statistics_province', {'province': province.Id}) }}">Détails</a></td>
            </tr>
            {% endfor %}
            <tr>
                <td class="align-middle text-right">Total</td>
                {% for value in total.Limits %}
                <td class="align-middle">{{ value }}</td>
                {% else %}
                <td class="align-middle">0</td>
                {% endfor %}
                <td class="align-middle">{{ total.Total.1 }}</td>
                <td class="align-middle">{{ total.Total.2 }}</td>
                <td class="align-middle">{{ total.Total.1 + total.Total.2 }}</td>
                <td class="align-middle"></td>
            </tr>
        </tbody>
    </table>
    <canvas id="myChart" width="400" height="400"></canvas>
{% endblock %}

{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script>
    <script>
        var ctx = document.getElementById('myChart').getContext('2d');

        Chart.defaults.global.defaultFontColor = 'white';

        var myChart = new Chart
        (ctx,
            {
                type: 'horizontalBar',
                options:
                    {
                        title:
                            {
                                display: true,
                                text: 'Totaux par Catégorie (%)',
                            },
                        legend:
                            {
                                display: false,
                            }
                    },
                data:
                    {
                        labels: ['Garçons moins de 6 ans', 'Filles moins de 6 ans', 'Garçons moins de 12 ans', 'Filles moins de 12 ans', 'Adolescents moins de 18 ans', 'Adolescentes moins de 18 ans', 'Hommes moins de 25 ans', 'Femmes moins de 25 ans', 'Hommes moins de 35 ans', 'Femmes moins de 35 ans', 'Hommes plus de 35 ans', 'Femmes plus de 35 ans'],
                        datasets:
                            [{
                                data: [{% for value in total.Limits %}{{ ((value * 100) / (total.Total.1 + total.Total.2))|round(1, 'common') }},{% endfor %}],
                                backgroundColor:
                                    [
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 0.2)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 0.2)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 0.2)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 0.2)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 0.2)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 0.2)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 0.2)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 0.2)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 0.2)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 0.2)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 0.2)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 0.2)'
                                    ],
                                borderColor:
                                    [
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 1)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 1)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 1)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 1)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 1)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 1)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 1)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 1)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 1)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 1)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 1)',
                                        'rgba({{ random(255) }}, {{ random(255) }}, {{ random(255) }}, 1)'
                                    ],
                                borderWidth: 1,
                                fontColor: ['rgba(255, 255, 255)'],
                            }]
                    },
            }
        );
    </script>
{% endblock %}
